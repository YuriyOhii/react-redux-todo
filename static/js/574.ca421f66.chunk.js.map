{"version":3,"file":"static/js/574.ca421f66.chunk.js","mappings":"2PAGaA,EAAQC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iCAIjBC,GAAMH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAYK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,8KAYlBI,GAAQN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,qEAOrBO,GAAaT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAoBW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,oE,6BClBxCU,EAAW,CACfC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGNC,EAAU,CACdH,MAAMI,EAAAA,EAAAA,MACNH,OAAOG,EAAAA,EAAAA,MACPF,UAAUE,EAAAA,EAAAA,OAGNC,EAASC,EAAAA,GAAW,CACxBN,KAAMM,EAAAA,KAAaC,WACnBN,MAAOK,EAAAA,KAAaC,WAAWN,QAC/BC,SAAUI,EAAAA,KACPE,IAAI,EAAG,yCACPD,aAGQE,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC5B,EAAK,CAAA2B,SAAC,uBACPC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAejB,EACfkB,SAVe,SAACC,EAAMC,GAAqB,IAAjBC,EAASD,EAATC,UAC9BC,QAAQC,IAAIJ,GACZR,GAASa,EAAAA,EAAAA,IAAaL,IACtBE,GACF,EAOMI,iBAAkBnB,EAAOQ,UAEzBD,EAAAA,EAAAA,MAACtB,EAAG,CAAAuB,SAAA,EACFC,EAAAA,EAAAA,KAAA,SAAOW,QAAStB,EAAQH,KAAKa,SAAC,UAC9BC,EAAAA,EAAAA,KAACrB,EAAK,CAACiC,GAAIvB,EAAQH,KAAM2B,KAAK,OAAO3B,KAAK,UAC1Cc,EAAAA,EAAAA,KAAClB,EAAU,CAACI,KAAK,OAAO4B,UAAW,SACnCd,EAAAA,EAAAA,KAAA,SAAOW,QAAStB,EAAQF,MAAMY,SAAC,WAC/BC,EAAAA,EAAAA,KAACrB,EAAK,CAACiC,GAAIvB,EAAQF,MAAO0B,KAAK,QAAQ3B,KAAK,WAC5Cc,EAAAA,EAAAA,KAAClB,EAAU,CAACI,KAAK,QAAQ4B,UAAW,SACpCd,EAAAA,EAAAA,KAAA,SAAOW,QAAStB,EAAQD,SAASW,SAAC,cAClCC,EAAAA,EAAAA,KAACrB,EAAK,CAACiC,GAAIvB,EAAQD,SAAUyB,KAAK,OAAO3B,KAAK,cAC9Cc,EAAAA,EAAAA,KAAClB,EAAU,CAACI,KAAK,WAAW4B,UAAW,SAEvCd,EAAAA,EAAAA,KAACe,EAAAA,EAAM,CAACF,KAAK,SAAQd,SAAC,oBAKhC,ECzDe,SAASiB,IACtB,OACEhB,EAAAA,EAAAA,KAAA,WAAAD,UACEC,EAAAA,EAAAA,KAACL,EAAY,KAGnB,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, ErrorMessage, Field } from 'formik';\n\nexport const Title = styled.h1`\n  text-align: center;\n`;\n\nexport const Box = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin: 0 auto;\n  width: 320px;\n  padding: 10px;\n\n  border: 1px solid grey;\n  border-radius: 2px;\n`;\n\nexport const Input = styled(Field)`\n  font-size: 16px;\n  font-weight: 500;\n\n  color: grey;\n`;\n\nexport const ErrCaption = styled(ErrorMessage)`\n  font-size: 12px;\n  font-weight: 400;\n\n  color: red;\n`;\n","import { Button } from 'components/Button/Button';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport { Box, ErrCaption, Input, Title } from './RegisterForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from 'redux/auth/operations';\n\nconst initForm = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst labelId = {\n  name: nanoid(),\n  email: nanoid(),\n  password: nanoid(),\n};\n\nconst schema = Yup.object({\n  name: Yup.string().required(),\n  email: Yup.string().required().email(),\n  password: Yup.string()\n    .min(7, 'You need to type atleast 7 characters')\n    .required(),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = (values, { resetForm }) => {\n    console.log(values);\n    dispatch(registerUser(values));\n    resetForm();\n  };\n  return (\n    <div>\n      <Title>Please, register!</Title>\n      <Formik\n        initialValues={initForm}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <Box>\n          <label htmlFor={labelId.name}>Name</label>\n          <Input id={labelId.name} type=\"text\" name=\"name\" />\n          <ErrCaption name=\"name\" component={'div'} />\n          <label htmlFor={labelId.email}>Email</label>\n          <Input id={labelId.email} type=\"email\" name=\"email\" />\n          <ErrCaption name=\"email\" component={'div'} />\n          <label htmlFor={labelId.password}>Password</label>\n          <Input id={labelId.password} type=\"text\" name=\"password\" />\n          <ErrCaption name=\"password\" component={'div'} />\n\n          <Button type=\"submit\">Register</Button>\n        </Box>\n      </Formik>\n    </div>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function RegisterPage() {\n  return (\n    <section>\n      <RegisterForm />\n    </section>\n  );\n}\n"],"names":["Title","styled","_templateObject","_taggedTemplateLiteral","Box","Form","_templateObject2","Input","Field","_templateObject3","ErrCaption","ErrorMessage","_templateObject4","initForm","name","email","password","labelId","nanoid","schema","Yup","required","min","RegisterForm","dispatch","useDispatch","_jsxs","children","_jsx","Formik","initialValues","onSubmit","values","_ref","resetForm","console","log","registerUser","validationSchema","htmlFor","id","type","component","Button","RegisterPage"],"sourceRoot":""}